
-----------------------------------------------------------------------------------
Loading initial setup <my_foodora.ini>
The initial file <my_foodora.ini> successfully loaded into the system.
-----------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------
                                   TESTSCENARIO1.TXT                                    
----------------------------------------------------------------------------------------------------------------
login ceo 123456789
Welcome on MyFoodora, user <ceo>. 
Please enter a command. Enter "help" to get the list of available commands.

registerCustomer herve biausser hbiausser 0,0 password
Customer <hbiausser> has been registered on myfoodora.

registerCustomer paulo ballarini pballarini 20,10 password
Customer <pballarini> has been registered on myfoodora.

registerRestaurant BonheurdAntony bantony 3,3 password
Restaurant <bantony> has been registered on myfoodora.

registerCourier john cagnol jcagnol 4,-2 password
Courier <jcagnol> has been registered on myfoodora.

registerCourier hillary clinton hclinton 2,3 password
NAME ALREADY TAKEN : "hclinton" already exists.

showUsers

[USERS]
<Manager> ceo; fullname = raymond JI
<Manager> deputy; fullname = Xiaoan HE
<Customer> emacron; fullname = Emmanuel MACRON; address=1.0,1.0; agrees to be notified of special offers; has a standard fidelity card
<Customer> mlepen; fullname = Marine LEPEN; address=0.5,0.5; agrees to be notified of special offers; has a standard fidelity card
<Customer> ffillon; fullname = Francois FILLON; address=3.0,3.0; will not be notified of special offers; has a standard fidelity card
<Customer> jlmelenchon; fullname = JeanLuc MELENCHON; address=1.0,1.0; will not be notified of special offers; has a standard fidelity card
<Customer> bhamon; fullname = Benoit HAMON; address=-4.0,-4.0; will not be notified of special offers; has a standard fidelity card
<Customer> ndupont; fullname = Nicolas DUPONT; address=0.0,0.0; will not be notified of special offers; has a standard fidelity card
<Customer> ppoutou; fullname = Philippe POUTOU; address=-7.5,-7.5; will not be notified of special offers; has a standard fidelity card
<Courier> dtrump; fullname = Donald TRUMP; position=2.0,2.0; is on-duty.
<Courier> hclinton; fullname = Hillary CLINTON; position=-2.0,2.0; is on-duty.
<Courier> bsanders; fullname = Bernie SANDERS; position=2.0,-2.0; is on-duty.
<Courier> bobama; fullname = Barack OBAMA; position=-2.0,-2.0; is on-duty.
<Restaurant> french; name = FrenchRestaurant; address=5.0,3.5
<Restaurant> chinese; name = ChineseRestaurant; address=-2.0,3.0
<Restaurant> japanese; name = JapaneseRestaurant; address=-2.0,-5.0
<Restaurant> korean; name = KoreanRestaurant; address=-1.0,-2.0
<Restaurant> italian; name = ItalianRestaurant; address=1.5,-3.0
<Customer> hbiausser; fullname = herve BIAUSSER; address=0.0,0.0; will not be notified of special offers; has a standard fidelity card
<Customer> pballarini; fullname = paulo BALLARINI; address=20.0,20.0; will not be notified of special offers; has a standard fidelity card
<Restaurant> bantony; name = BonheurdAntony; address=3.0,3.0
<Courier> jcagnol; fullname = john CAGNOL; position=4.0,-2.0; is on-duty.

logout
Goodbye <ceo>. We hope to see you again on MyFoodora.



login bantony password

-----[BONHEURDANTONY username <bantony>]-----

[Menu]
Starters:
Main-dishes:
Desserts:

[Meal menu]

[Special Offers]
Welcome on MyFoodora, user <bantony>. 
Please enter a command. Enter "help" to get the list of available commands.

addDishRestaurantMenu salad starter vegetarian 3.3
<salad> has been added to the menu of <bantony>.

addDishRestaurantMenu vegetables main vegetarian 5.5
<vegetables> has been added to the menu of <bantony>.

addDishRestaurantMenu potatoes dessert gluten-free 2.0
<potatoes> has been added to the menu of <bantony>.



createMeal BA01
Meal <BA01> has been created.

addDish2Meal salad BA01
Dish <salad> has been added to the meal <BA01>.

addDish2Meal vegetables BA01
Dish <vegetables> has been added to the meal <BA01>.

addDish2Meal potatoes BA01
Dish <potatoes> has been added to the meal <BA01>.

showMeal BA01
The dishes of the meal <BA01> are :
Starter <Salad> vegetarian 3.3 euros 
MainDish <Vegetables> vegetarian 5.5 euros 
Dessert <Potatoes> gluten-free 2.0 euros 

saveMeal BA01
Formula <Ba01> added to the meal-menu of BonheurdAntony
Meal <BA01> has been saved and added to the meal-menu of <BonheurdAntony>.

setSpecialOffer BA01
Meal BA01 saved as a special-offer of BonheurdAntony



createMeal BA02
Meal <BA02> has been created.

addDish2Meal salad BA02
Dish <salad> has been added to the meal <BA02>.

addDish2Meal salad BA02
DISH TYPE ERROR: A meal can have at most 1 dessert, 1 main & 1 dessert. Furthermore,a half-meal must have a least 1 main-dish.



showMenu

-----[BONHEURDANTONY username <bantony>]-----

[Menu]
Starters:
Starter <Salad> vegetarian 3.3 euros 
Main-dishes:
MainDish <Vegetables> vegetarian 5.5 euros 
Desserts:
Dessert <Potatoes> gluten-free 2.0 euros 

[Meal menu]

[Special Offers]
Full-meal <Ba01> [Salad, Vegetables, Potatoes] type standard 9.0 euros

logout
Goodbye <bantony>. We hope to see you again on MyFoodora.



login hbiausser password
[RESTAURANT]
<Restaurant> french; name = FrenchRestaurant; address=5.0,3.5
<Restaurant> chinese; name = ChineseRestaurant; address=-2.0,3.0
<Restaurant> japanese; name = JapaneseRestaurant; address=-2.0,-5.0
<Restaurant> korean; name = KoreanRestaurant; address=-1.0,-2.0
<Restaurant> italian; name = ItalianRestaurant; address=1.5,-3.0
<Restaurant> bantony; name = BonheurdAntony; address=3.0,3.0
Welcome on MyFoodora, user <hbiausser>. 
Please enter a command. Enter "help" to get the list of available commands.

createOrder italian myorder
Order <myorder> added to your shopping cart.

additem2order pizza myorder 
Item <pizza> added to the order <myorder>.

additem2order hm3 myorder
Item <hm3> added to the order <myorder>.

showshoppingcart

SHOPPINGCART : 

[Order <myorder> ID1133]
[11.99€] 
A-la-carte <Pizza> 6.3
Meal <Hm3> 5.69
BY <hbiausser> herve biausser
AT <italian> ItalianRestaurant
ON 06/05/2017

TOTAL PRICE = 11.99 euros

endorder myorder 24/04/2017
[Order <myorder> ID1133]
[11.99€] 
A-la-carte <Pizza> 6.3
Meal <Hm3> 5.69
BY <hbiausser> herve biausser
AT <italian> ItalianRestaurant
ON 06/05/2017
Sanders Bernie <bsanders> has been assigned to the delivery task.
Order <myorder> finalised on 24/04/2017 and you paid for it.

logout
Goodbye <hbiausser>. We hope to see you again on MyFoodora.

----------------------------------------------------------------------------------------------------------------

login ceo password
LOGIN ERROR: Wrong username/password. Please try again.

login ceo 123456789
Welcome on MyFoodora, user <ceo>. 
Please enter a command. Enter "help" to get the list of available commands.

logout
Goodbye <ceo>. We hope to see you again on MyFoodora.

help
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					HELP
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Please find below the list of available commands:

login <username> <password> : login with your username & password.

register <> : register on the MyFoodora system. Follow the steps.

runTest <testScenario-file> : execute the list of CLUI commands contained in the testScenario file passed as argument. Example : runTest testScenario1.txt

help <>: display the list of available CLUI commands with an indication of their syntax.



Account examples for tests :

Manager : username = ceo; password = 123456789;

Customer : username = emacron; password = password;

Courier : username = dtrump; password = password;

Restaurant : username = restaurant; password = password;

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

login ceo 123456789
Welcome on MyFoodora, user <ceo>. 
Please enter a command. Enter "help" to get the list of available commands.

help
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					HELP - MANAGER
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Please find below the list of available commands for a MANAGER:

registerRestaurant <name> <username> <address> <password> : add a restaurant of given name, address, username and password to the system. <username> must be unique.
<address> is given as a bi-dimensional coordinate, example 1.0,2.5

registerCustomer <firstName> <lastName> <username> <address> <password> : add a client to the system. By default each newly registered customer will not receive notification for special-offers.
<username> must be unique.
<address> is given as a bi-dimensional coordinate, example 1.0,2.5

registerCourier <firstName> <lastName> <username> <position> <password> : add a courier to the system. By default each newly registered courier is on-duty.
<username> must be unique.
<address> is given as a bi-dimensional coordinate, example 1.0,2.5

registerManager <firstName> <lastName> <username> : add a manager to the system. <username> must be unique.

removeUser <username> : delete the account of the user from the system.

setDeliveryPolicy <deliveryPolicyName>: set the delivery policy of the system to that passed as argument. <deliveryPolicyName> = fastest/fair for respectively FastestDelivery/FairOccupationDelivery

setProfitPolicy <profitPolicyName> : set the profit policy of the system to that passed as argument. <profitPolicyName> = delivery_cost/markup_percentage/service_fee

setServiceFee <service_fee> : change the service fee of the system to the value passed as argument.

setMarkupPercentage <markup_percentage> : change the mark-up percentage of the system to the value passed as argument.

setDeliveryCost <delivery_cost> : change the delivery cost of the system to the value passed as argument.

associateCard <userName> <cardType> : associate a fidelity card to a user with given name. 
<cardType> = point/lottery for respectively PointCard/LotteryCard.

showCourierDeliveries <sortingOrder> : display the list of couriers sorted in given order w.r.t. the number of completed deliveries.
<sortingOrder> = asc/desc. If empty, display in decreasing order.

showRestaurantTop <sortingOrder> : display the list of restaurant sorted in given order w.r.t. the number of delivered orders.
<sortingOrder> = asc/desc. If empty, display in decreasing order.

applyProfitPolicy <> : determining either the service-fee and/or markup percentage and/or the deliverycost so to meet a target-profit and set the new value.

showCustomers <> : display the list of customers.

showMenuItem <restaurant-username> : display the menu of a given restaurant with its username.

showTotalProfit<> : show the total profit of the system since creation.

showTotalProfit <startDate> <endDate> : show the total profit of the system within a time interval.
dateformat "dd/MM/yyyy", example 01/01/2017

showTotalIncome<> : show the total income of the system since creation.

showTotalIncome <startDate> <endDate> : show the total income of the system within a time interval.
dateformat "dd/MM/yyyy", example 01/01/2017

showAverageIncome<> : show the average income per customer of the system since creation.

showAverageIncome <startDate> <endDate> : show the average income per customer of the system within a time interval.
dateformat "dd/MM/yyyy", example 01/01/2017

showUsers <userType> : show users of the given type.
<userType> = customer/manager/restaurant/courier. 

showUsers <> : show all users.

showActiveUsers <>: show all active users.

showPolicies <>: show the delivery policy and the target profit policy of the system.

showSystemValues <>: show the delivery cost, service fee and mark-up percentage of the system.

showMessages <>:  show messages of your message board.

showNewMessages <>: show unread messages of your message board.

showInfo <> : show your general personal info.

showRestaurantMenus <> : show all restaurants with their menu.

showHistory <> : show history of all commands passed at MyFoodora since creation.

unregister <> : delete your account.

logout <> : log out.

runTest <testScenario-file> : execute the list of CLUI commands contained in the testScenario file passed as argument. Example : runTest testScenario1.txt

help <>: display the list of available CLUI commands with an indication of their syntax.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------


showmessages
There are no messages yet.

logout
Goodbye <ceo>. We hope to see you again on MyFoodora.

login emacron password
[RESTAURANT]
<Restaurant> french; name = FrenchRestaurant; address=5.0,3.5
<Restaurant> chinese; name = ChineseRestaurant; address=-2.0,3.0
<Restaurant> japanese; name = JapaneseRestaurant; address=-2.0,-5.0
<Restaurant> korean; name = KoreanRestaurant; address=-1.0,-2.0
<Restaurant> italian; name = ItalianRestaurant; address=1.5,-3.0
<Restaurant> bantony; name = BonheurdAntony; address=3.0,3.0
Welcome on MyFoodora, user <emacron>. 
You have new messages.
Please enter a command. Enter "help" to get the list of available commands.

showmessages
-- MessageBoard of emacron --
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_paris> [Foie-gras, Choucroute] type standard 10.8 euros by FrenchRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_beijing> [Pork_ribs, Lychees] type standard 9.9 euros by ChineseRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_tokyo> [Sushi, Lychee] type standard 7.2 euros by JapaneseRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_kim-jung-un> [Barbecue, Macha] type standard 13.5 euros by KoreanRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_roma> [Pizza, Tiramisu] type standard 9.9 euros by ItalianRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Full-meal <Ba01> [Salad, Vegetables, Potatoes] type standard 9.0 euros by BonheurdAntony

-----------------------------------------------------------------------------

login ceo 123456789
Welcome on MyFoodora, user <ceo>. 
Please enter a command. Enter "help" to get the list of available commands.

help
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					HELP - MANAGER
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Please find below the list of available commands for a MANAGER:

registerRestaurant <name> <username> <address> <password> : add a restaurant of given name, address, username and password to the system. <username> must be unique.
<address> is given as a bi-dimensional coordinate, example 1.0,2.5

registerCustomer <firstName> <lastName> <username> <address> <password> : add a client to the system. By default each newly registered customer will not receive notification for special-offers.
<username> must be unique.
<address> is given as a bi-dimensional coordinate, example 1.0,2.5

registerCourier <firstName> <lastName> <username> <position> <password> : add a courier to the system. By default each newly registered courier is on-duty.
<username> must be unique.
<address> is given as a bi-dimensional coordinate, example 1.0,2.5

registerManager <firstName> <lastName> <username> : add a manager to the system. <username> must be unique.

removeUser <username> : delete the account of the user from the system.

setDeliveryPolicy <deliveryPolicyName>: set the delivery policy of the system to that passed as argument. <deliveryPolicyName> = fastest/fair for respectively FastestDelivery/FairOccupationDelivery

setProfitPolicy <profitPolicyName> : set the profit policy of the system to that passed as argument. <profitPolicyName> = delivery_cost/markup_percentage/service_fee

setServiceFee <service_fee> : change the service fee of the system to the value passed as argument.

setMarkupPercentage <markup_percentage> : change the mark-up percentage of the system to the value passed as argument.

setDeliveryCost <delivery_cost> : change the delivery cost of the system to the value passed as argument.

associateCard <userName> <cardType> : associate a fidelity card to a user with given name. 
<cardType> = point/lottery for respectively PointCard/LotteryCard.

showCourierDeliveries <sortingOrder> : display the list of couriers sorted in given order w.r.t. the number of completed deliveries.
<sortingOrder> = asc/desc. If empty, display in decreasing order.

showRestaurantTop <sortingOrder> : display the list of restaurant sorted in given order w.r.t. the number of delivered orders.
<sortingOrder> = asc/desc. If empty, display in decreasing order.

applyProfitPolicy <> : determining either the service-fee and/or markup percentage and/or the deliverycost so to meet a target-profit and set the new value.

showCustomers <> : display the list of customers.

showMenuItem <restaurant-username> : display the menu of a given restaurant with its username.

showTotalProfit<> : show the total profit of the system since creation.

showTotalProfit <startDate> <endDate> : show the total profit of the system within a time interval.
dateformat "dd/MM/yyyy", example 01/01/2017

showTotalIncome<> : show the total income of the system since creation.

showTotalIncome <startDate> <endDate> : show the total income of the system within a time interval.
dateformat "dd/MM/yyyy", example 01/01/2017

showAverageIncome<> : show the average income per customer of the system since creation.

showAverageIncome <startDate> <endDate> : show the average income per customer of the system within a time interval.
dateformat "dd/MM/yyyy", example 01/01/2017

showUsers <userType> : show users of the given type.
<userType> = customer/manager/restaurant/courier. 

showUsers <> : show all users.

showActiveUsers <>: show all active users.

showPolicies <>: show the delivery policy and the target profit policy of the system.

showSystemValues <>: show the delivery cost, service fee and mark-up percentage of the system.

showMessages <>:  show messages of your message board.

showNewMessages <>: show unread messages of your message board.

showInfo <> : show your general personal info.

showRestaurantMenus <> : show all restaurants with their menu.

showHistory <> : show history of all commands passed at MyFoodora since creation.

unregister <> : delete your account.

logout <> : log out.

runTest <testScenario-file> : execute the list of CLUI commands contained in the testScenario file passed as argument. Example : runTest testScenario1.txt

help <>: display the list of available CLUI commands with an indication of their syntax.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------


showmessages
There are no messages yet.

logout
Goodbye <ceo>. We hope to see you again on MyFoodora.

login emacron password
[RESTAURANT]
<Restaurant> french; name = FrenchRestaurant; address=5.0,3.5
<Restaurant> chinese; name = ChineseRestaurant; address=-2.0,3.0
<Restaurant> japanese; name = JapaneseRestaurant; address=-2.0,-5.0
<Restaurant> korean; name = KoreanRestaurant; address=-1.0,-2.0
<Restaurant> italian; name = ItalianRestaurant; address=1.5,-3.0
<Restaurant> bantony; name = BonheurdAntony; address=3.0,3.0
Welcome on MyFoodora, user <emacron>. 
You have new messages.
Please enter a command. Enter "help" to get the list of available commands.

showmessages
-- MessageBoard of emacron --
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_paris> [Foie-gras, Choucroute] type standard 10.8 euros by FrenchRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_beijing> [Pork_ribs, Lychees] type standard 9.9 euros by ChineseRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_tokyo> [Sushi, Lychee] type standard 7.2 euros by JapaneseRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_kim-jung-un> [Barbecue, Macha] type standard 13.5 euros by KoreanRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Half-meal <I_love_roma> [Pizza, Tiramisu] type standard 9.9 euros by ItalianRestaurant
06/05/2017, SYSTEM: There is a new special-offer : Full-meal <Ba01> [Salad, Vegetables, Potatoes] type standard 9.0 euros by BonheurdAntony

